pomas

//define the agents, transition label and its observation for each agent, null denotes hidden
agents
	x0: open0->open0, call01->call01, call02->call02, call03->call03, close0->close0,votedX1->votedX1, votedX2->votedX2, votedX3->votedX3, votedY1->votedY1, votedY2->votedY2, votedY3->votedY3, submit1->submit1, submit2->submit2, submit3->submit3;
	x1: open0->open0, call01->call01, call02->call02, call03->call03, close0->close0, votedX1->votedX1, votedX2->null, votedX3->null, votedY1->votedY1, votedY2->null, votedY3->null, submit1->submit1, submit2->submit2, submit3->submit3;
	x2: open0->open0, call01->call01, call02->call02, call03->call03, close0->close0, votedX1->null, votedX2->votedX2, votedX3->null, votedY1->null, votedY2->votedY2, votedY3->null, submit1->submit1, submit2->submit2, submit3->submit3;
	x3: open0->open0, call01->call01, call02->call02, call03->call03, close0->close0, votedX1->votedX1, votedX2->votedX2, votedX3->votedX3, votedY1->votedY1, votedY2->votedY2, votedY3->votedY3, submit1->submit1, submit2->submit2, submit3->submit3;
endagents


module voting

        o: [0..2] init 0; //0:init 1:open 2:close
        call: [0..3] init 0; //chair call 1,2,3
	v1: [0..3] init 0; //voter1 1:voting, 2:voted x, 3:voted y
        v2: [0..3] init 0; //voter2 1:voting, 2:voted x, 3:voted y
        v3: [0..3] init 0; //voter3 1:voting, 2:voted x, 3:voted y
	sub1: [0..1] init 0; //voter1 submitted
	sub2: [0..1] init 0; //voter2 submitted
	sub3: [0..1] init 0; //voter3 submitted
	cx: [0..3] init 0; //counter for X
	cy: [0..3] init 0; //counter for Y

        [] o=0 & call=0 & (sub1=0) & (sub2=0) & (sub3=0) & (v1=0) & (v2=0) & (v3=0) & (cx=0) & (cy=0) -> 1: x0: open0: (o'=1);

        [] o=1 & call=0  -> 1: x0 : call01: (call'=1) & (v1'=1);

        [] call=1 & v1=1 & sub1=0 & o=1 -> 1/2: x1: votedX1: (v1'=2) & (cx'=cx+1) + 1/2: x1: votedY1: (v1'=3) & (cy'=cy+1);

        [] call=1 & v1>1 & sub1=0 & o=1 -> 1: x1: submit1: (sub1'=1);
        
	[] call=1 & sub1=1 & o=1 -> 1: x0: call02: (call'=2) & (v2'=1);
	
	[] call=2 & v2=1 & sub2=0 & o=1  -> 2/3: x2: votedX2: (v2'=2) & (cx'=cx+1) + 1/3: x2: votedY2: (v2'=3) & (cy'=cy+1);

	[] call=2 & v2>1 & sub2=0 & o=1 -> 1: x2: submit2: (sub2'=1); 

	[] call=2 & sub2=1 & o=1 -> 1: x0: call03: (call'=3) & (v3'=1);	
	
	[] call=3 & v3=1 & sub3=0 & o=1 -> 1/2: x3: votedX3: (v3'=2) & (cx'=cx+1) + 1/2: x3: votedY3: (v3'=3) & (cy'=cy+1);

	[] call=3 & v3>1 & sub3=0 & o=1 -> 1: x3: submit3: (sub3'=1); 

	[] sub1=1 & sub2=1 & sub3=1 & o=1 -> 1: x0: close0: (o'=2) & (call'=0) & (v1'=0) & (v2'=0) & (v3'=0) ;

endmodule
