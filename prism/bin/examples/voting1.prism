pomas

//define the agents, transition label and its observation for each agent, null denotes hidden
agents
	x0: open0->open0, close0->close0, bad1->bad1, bad2->bad2, bad3->bad3, votedX1->votedX1, votedX2->votedX2, votedY1->votedY1, votedY2->votedY2, votedX3->votedX3, votedY3->votedY3;
	x1: open0->open0, close0->close0, bad1->bad1, bad2->null, bad3->null, votedX1->votedX1, votedX2->null, votedY1->votedY1, votedY2->null, votedX3->null, votedY3->null;
	x2: open0->open0, close0->close0, bad1->null, bad2->bad2, bad3->null, votedX1->null, votedX2->votedX2, votedY1->votedY1, votedY2->votedY2, votedX3->null, votedY3->votedY3;
	x3: open0->open0, close0->close0, bad1->null, bad2->null, bad3->bad3, votedX1->null, votedX2->null, votedY1->null, votedY2->null, votedX3->votedX3, votedY3->votedY3;

endagents


module voting

        o: [0..2] init 1; //1:open 2:close
	v1: [0..3] init 0; //voter1 2:voted x, 3:voted y
        v2: [0..3] init 0; //voter2 2:voted x, 3:voted y
        v3: [0..3] init 0; //voter3 2:voted x, 3:voted y
	cx: [0..2] init 0; //counter for X
	cy: [0..2] init 0; //counter for Y

        [] v1=0 & v2=0 & v3=0 & o=1 -> 1/6:x1:bad1:(v1'=v1) + 1/2: x1: votedX1: (v1'=2) & (cx'=cx+1) + 1/3: x1: votedY1: (v1'=3) & (cy'=cy+1);
	
	[] v1>0 & v2=0 & v3=0 & o=1  -> 1/6:x2:bad2:(v2'=v2) + 1/3: x2: votedX2: (v2'=2) & (cx'=cx+1) + 1/2: x2: votedY2: (v2'=3) & (cy'=cy+1);
	
	[] v1>0 & v2>0 & v3=0 & o=1 & cx>cy  -> 1: x3: votedX3: (v3'=2) & (cx'=cx+1);

	[] v1>0 & v2>0 & v3=0 & o=1 & cx<cy -> 1: x3: votedY3: (v3'=3) & (cy'=cy+1);
	
	[] v1>0 & v2>0 & v3=0 & o=1 & cx=cy -> 1/3: x3: votedX3: (v3'=2) & (cx'=cx+1) + 2/3: x3: votedY3: (v3'=3) & (cy'=cy+1);

	[] (cx+cy>0)& (v1>0) & (v2>0) & (v3>0) & o=1 -> 1: x0: close0: (o'=2);

endmodule
